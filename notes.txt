
http://bitdrift.com/post/4534738938/fork-your-own-project-on-github

Possibly some useful stuff but more advanced things and not based on the API
https://github.com/defunkt/github-gem

A Ruby wrapper for the GitHub REST API v3.
https://github.com/peter-murach/github

http://developer.github.com/v3/

http://blog.macromates.com/2006/keychain-access-from-shell/
http://procbits.com/2011/10/07/automating-the-mac-os-x-keychain-app-with-ruby/
http://samuel.kadolph.com/2011/03/store-your-git-https-passwords-in-your-os-x-keychain/
http://tech.lds.org/wiki/Git_Credential_Caching_on_Mac_OS_X
https://github.com/anurse/git-credential-winstore
https://help.github.com/articles/set-up-git
http://brandonsummers.name/blog/2012/02/10/using-bitbucket-for-automated-deployments/

https://github.com/vongrippen/bitbucket


A command line tool for Bitbucket to create, delete private repository
https://github.com/glidenote/pori

Git Servers
http://www.springloops.com/v2/
http://www.codebasehq.com/
http://beanstalkapp.com/
http://gitorious.org/
# free for 5 users, unlimited private and public repos - looks the best
https://bitbucket.org/plans

* confirm mode will confirm every command in english and ask confirm (y or n) ?
* local paths begin with . or /
* names are assumed to be a server repo

## Potential Commands

# list repos available : dash list repos
# download existing repo : dash download blank zombiemart
# fork server repo blank as zombiemart : dash fork blank zombiemart

# get config property: dash get kind
# set config property: dash set kind bigcommerce
# change project identity - ask lots of questions to configure this project to another shop : dash identify flyshop


# dash git ...    # talk directly to git
# dash middleman  # talk directly to middleman



# dash pull git://somegitrepo   # if no local repo, will ask "Do you wish to a) clone somegitrepo into a new folder /asds/dsa/somegitrepo or b) pull changes, except that you aren't inside a repo and haven't specified one"
# dash fork git://somegitrepo



Version One Features

* ~/.dash-config.xml  # stores repos folder path, repos to ignore etc
* credentials stored in osxkeychain via security command compatible with git-credential-osxkeychain

* dash auth # ensures has passwords eg. for github and current project
* dash download <git repo url> <new folder name>
* dash identity   # configure unique name, description, remote repo, deploy destination, github credentials, deploy credentials
* dash commit
* dash push # warns if uncommitted changes
* dash pull # warns if uncommitted changes
* dash build
* dash revert
